name: android
on:
  push:
    tags:
      - "*"
  pull_request:
    branches: ["main"]

jobs:
  android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        opencv-version: [4.10.0]
        abi: [armeabi-v7a, arm64-v8a, x86_64]
    env:
      COMMON_CMAKE_OPTIONS: |
        -DCMAKE_POLICY_DEFAULT_CMP0057=NEW \
        -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_LATEST_HOME/build/cmake/android.toolchain.cmake \
        -DANDROID_USE_LEGACY_TOOLCHAIN_FILE=False \
        -DANDROID_PLATFORM=android-24 \
        -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_BUILD_TYPE=Release \
        -DANDROID_STL=c++_static \
        -DOPENCV_EXTRA_MODULES_PATH="../../opencv_contrib/modules" \
    steps:
      - uses: actions/checkout@v4
      - name: setup-opencv-source
        run: |
          git clone -b ${{ matrix.opencv-version }} https://github.com/opencv/opencv.git opencv
          git clone -b ${{ matrix.opencv-version }} https://github.com/opencv/opencv_contrib.git opencv_contrib
          echo "SOURCE_DIR=opencv" >> $GITHUB_ENV
          echo "PACKAGE_NAME=libopencv-android-${{ matrix.abi }}" >> $GITHUB_ENV
      - name: build
        run: |
          cd ${{ env.SOURCE_DIR }}
          mkdir build && cd build
          cmake ${{ env.COMMON_CMAKE_OPTIONS }} -DANDROID_ABI="${{ matrix.abi }}" -DANDROID_ARM_NEON=ON \
              `cat ../../options.txt` -DBUILD_opencv_world=OFF ..
          cmake --build . -j $(nproc)
          cmake --build . --target install

      - name: package
        run: |
          mkdir -p ${{ env.PACKAGE_NAME }}/
          cp -rf ${{ env.SOURCE_DIR }}/build/install/* ${{ env.PACKAGE_NAME }}/
          tar -zcvf ${{ env.PACKAGE_NAME }}.tar.gz ${{ env.PACKAGE_NAME }}
      - name: test
        run: |
          cd test
          mkdir build && cd build
          cmake ${{ env.COMMON_CMAKE_OPTIONS }} -DANDROID_ABI="${{ matrix.abi }}" -DANDROID_ARM_NEON=ON \
              -DOpenCV_DIR=$GITHUB_WORKSPACE/${{ env.PACKAGE_NAME }}/sdk/native/jni ..
          cmake --build . -j $(nproc)
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.PACKAGE_NAME }}.tar.gz
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          files: |
            ${{ env.PACKAGE_NAME }}.tar.gz
